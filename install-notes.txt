Installation notes

3/7/16+ (aem): To install boost under OS X:

  brew install boost

Updating g++:

  brew install gcc --use-llvm

3/7/16+ (aem, mac): Static linking to system libraries under OS X is
problematic.  Cannot static link against libcrt0.  So do not include
-static compiler flag in config.mk.

3/7/16+ (mac): Example of extracting the Eigen3 headers from a
freshly-downloaded tgz file.  Say you have downloaded
eigen-eigen-b30b87236a1b.tar.gz and want to install it to
<groupdir>/opt/eigen-3.2.7:

   % tar xvf eigen-eigen-b30b87236a1b.tar.gz
   % mkdir --parents <groupdir>/opt/eigen-3.2.7/include/eigen3
   % mv eigen-eigen-b30b87236a1b/Eigen <groupdir>/opt/eigen-3.2.7/include/eigen3/
   % rm -r eigen-eigen-b30b87236a1b

6/29/16 (aem, mac): @NDCRC: When cloning on the NDCRC, one can use direct
file access rather than ssh access.

  In general 
  
  % git clone --recursive /afs/crc.nd.edu/group/nuclthy/git/spncci.git
  
  or since most of the changes haven't been merged to master, including submodules 
  
  % git clone --recursive /afs/crc.nd.edu/group/nuclthy/git/spncci.git --branch devel

10/28/16 (mac): @NERSC: For reference, we note that the following are
the current default versions on Edison as of 10/29/16:

  % module load gcc/6.1.0
  % module load boost/1.54
  % module load gsl/1.16
  % module load eigen3/3.2.0 

Note: This is a pretty old version of eigen which gives lots of
warnings under gcc.

Successful build with gnu (PrgEnv-gnu => gcc/6.1.0).  Failing build
with intel (PrgEnv-intel => intel/15.0.1.133).

10/29/16 (pjf e-mail): @NERSC: I just found a particularly nasty
interaction between compilers on NERSC. It appears that, internally,
icpc calls gcc. The simple answer is, you need to have at least GCC
4.8 loaded. Call 'module load gcc/4.8.0' or higher (the default 6.1.0
is preferred). It's probably a good idea to call 'module load
intel/16.0.0.109' or 'module load intel/17.0.0.098' to get a newer
version of icpc too.

10/31/16 (mac): @NERSC: Successful builds on Cori with gcc and intel:

  PrgEnv-gnu/6.0.3 => gcc/5.3.0 
  gcc/5.3.0
  boost/1.61
  gsl/2.1
  m2032/opt/eigen-3.2.10

  PrgEnv-intel/6.0.3 => intel/16.0.3.210
  gcc/5.3.0
  boost/1.61
  gsl/2.1
  m2032/opt/eigen-3.2.10

11/20/16 (mac): @NERSC: On Edison, successful build with gnu, but
failed build with intel.  Is it an issue with the older intel
compiler?  Chokes on std::vector<Eigen::MatrixXd>.

  PrgEnv-gnu/5.2.56 => gcc/6.1.0
  gcc/6.1.0
  boost/1.54
  gsl/1.16 
  m2032/opt/eigen-3.2.10

  PrgEnv-intel/5.2.56 => intel/15.0.1.133
  gcc/6.1.0
  boost/1.54
  gsl/1.16 
  m2032/opt/eigen-3.2.10

12/22/16 (mac): @NDCRC: We will include the ompi module in
module-load-ndcrc, even though not currently needed, both convenience
when compiling LSU3shell and for future MPI support.

12/29/16 (mac): @NERSC: Edison's CRAY_CPU_TARGET is normally
ivybridge, but sometimes seems to wander off to sandybridge at runtime
on the front end.  An ugly workaround is to set up a symlink.

   % ln -s ivybridge sandybridge

12/29/16 (mac): @NDCRC: For gnu, *could* update modules to those expecting gcc 5.2.0:

  module load gcc/5.2.0
  module load ompi/2.0.1-gcc-5.2.0
  boost/1.62

But then compilation of mfdn v14b06 fails, since mpif90 seems to is missing library.

For intel, most recent ompi has no corresponding boost (could try default boost/1.54):

  module load intel/15.0
  module load ompi/1.8.7-intel-15.0

But mfdn v14b06 fails to compile.

1/9/16 (mac): @NDCRC: After maintenance, default is gcc/5.2.0.
Latest versions are:

  module load gcc/6.2.0
  module load gsl/1.16
  module load boost/1.62
  module load ompi/2.0.1-gcc-6.2.0

But boost/1.62 requires gcc/5.2.0.  And python/3.5.2 requires
gcc/4.9.2.  Sent request to NDCRC support...

1/15/17 (mac): @NDCRC: NDCRC support built boost and python under
gcc/6.2.0 and claims this provides compatible ompi + python + boost +
gsl:

  module load gcc/6.2.0
  module load gsl/1.16
  module load boost/1.63
  module load ompi/2.0.1-gcc-6.2.0
  module load python/3.6.0
